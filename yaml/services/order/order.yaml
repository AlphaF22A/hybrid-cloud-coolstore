apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
  name: order
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: >-
      ["my-cluster","order-database",{"apiVersion":"apps/v1","kind":"Deployment","name":"order-database"}]
  labels:
    app: order
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/part-of: order
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0-SNAPSHOT
      app.kubernetes.io/name: order
  strategy: {}
  template:
    metadata:
      labels:
        app: order
        app.kubernetes.io/name: order
        app.kubernetes.io/version: 1.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
    spec:
      containers:
      - image: ghcr.io/rhsgsa/order:1.0-SNAPSHOT
        name: order
        env:
        - name: QUARKUS_MONGODB_DATABASE
          value: orders
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        imagePullPolicy: IfNotPresent
        resources: {}
status: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: order
    app.kubernetes.io/version: 1.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
  name: order
spec:
  port:
    targetPort: 8080
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  to:
    kind: Service
    name: order
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: order-database
    app.kubernetes.io/component: order-database
    app.kubernetes.io/instance: order-database
    app.kubernetes.io/part-of: order
    app.openshift.io/runtime: mongodb
  name: order-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-database
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: order-database
    spec:
      containers:
      - image: quay.io/openshiftlabs/ccn-mongo:4.0
        name: ccn-mongo
        ports:
        - containerPort: 27017
          protocol: TCP
        volumeMounts:
        - mountPath: /data/configdb
          name: order-database-volume-1
        - mountPath: /data/db
          name: order-database-volume-2
        resources: {}
      volumes:
      - emptyDir: {}
        name: order-database-volume-1
      - emptyDir: {}
        name: order-database-volume-2
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  labels:
    app: order-database
    app.kubernetes.io/component: order-database
    app.kubernetes.io/instance: order-database
  name: order-database
spec:
  ports:
  - name: 27017-tcp
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: order-database
