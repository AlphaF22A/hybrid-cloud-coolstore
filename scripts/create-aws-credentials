#!/bin/bash

SSH_DIR=/tmp/hybridcloud
SSH_KEYFILE=cluster

cd `dirname $0`
BASE=`pwd`
cd - >> /dev/null

source ${BASE}/../config.sh

if [ -z "$AWS_SECRET_NAME" ]; then
  echo "AWS_SECRET_NAME not set in config.sh"
  exit 1
fi

PULL_SECRET=${BASE}/../pull-secret.txt

set -e

if [ ! -f $PULL_SECRET ]; then
  echo "pull secret $PULL_SECRET does not exist - please download it from https://console.redhat.com/openshift/install/pull-secret"
  exit 1
fi

echo "paste contents of RHDP email followed by ctrl-D on a new line"
echo "if you don't have the email, login to demo.redhat.com, select Services / OCP4 ACM Hub / Details, and copy the contents of Provision Messages"

while read -r line; do
  if [[ $line =~ "https://api" ]]; then
    api="$(echo -n $line | sed -e 's|.*\(https://api[^ ]*\).*|\1|')"
  elif [[ $line =~ "User admin with password " ]]; then
    password="$(echo -n $line | sed -e 's/.*User admin with password \([^ ]*\).*/\1/')"
  elif [[ $line =~ "AWS_ACCESS_KEY_ID: " ]]; then
    aws_access_key_id="$(echo -n $line | sed -e 's/.*AWS_ACCESS_KEY_ID: *\([^ ]*\).*/\1/')"
  elif [[ $line =~ "AWS_SECRET_ACCESS_KEY: " ]]; then
    aws_secret_access_key="$(echo -n $line | sed -e 's/.*AWS_SECRET_ACCESS_KEY: *\([^ ]*\).*/\1/')"
  elif [[ $line =~ "Top level domain: " ]]; then
    base_domain="$(echo -n $line | sed -e 's/.*Top level domain: *\.\([^ ]*\).*/\1/')"
  fi
done

if [ -z "$api" ]; then
  echo "could not extract api server URL"
  exit 1
fi
if [ -z "$password" ]; then
  echo "could not extract admin password"
  exit 1
fi
if [ -z "$aws_access_key_id" ]; then
  echo "could not extract AWS Access Key ID"
  exit 1
fi
if [ -z "$aws_secret_access_key" ]; then
  echo "could not extract AWS Secret Access Key"
  exit 1
fi
if [ -z "$base_domain" ]; then
  echo "could not extract top level domain"
  exit 1
fi

echo "API Server = $api"
echo "admin Password = $password"
echo "AWS Access Key ID = $aws_access_key_id"
echo "AWS Secret Access Key = $aws_secret_access_key"
echo "Base Domain = $base_domain"

echo "logging into ACM Hub..."
oc login --insecure-skip-tls-verify -u admin -p $password $api

oc get project open-cluster-management 2>/dev/null >/dev/null
if [ $? -ne 0 ]; then
  echo "open-cluster-management namespace does not exist - this cluster does not look like it has ACM installed"
  exit 1
fi

rm -rf $SSH_DIR
mkdir -p $SSH_DIR
echo "generating ssh key pair for ACM..."
ssh-keygen -f ${SSH_DIR}/${SSH_KEYFILE} -N ""

echo "creating AWS credentials secret..."

oc create secret generic $AWS_SECRET_NAME \
  -n open-cluster-management \
  --from-literal=additionalTrustBundle="" \
  --from-literal=aws_access_key_id="$aws_access_key_id" \
  --from-literal=aws_secret_access_key="$aws_secret_access_key" \
  --from-literal=baseDomain="$base_domain" \
  --from-literal=httpProxy="" \
  --from-literal=httpsProxy="" \
  --from-literal=noProxy="" \
  --from-file=pullSecret="$PULL_SECRET" \
  --from-file=ssh-privatekey="${SSH_DIR}/${SSH_KEYFILE}" \
  --from-file=ssh-publickey="${SSH_DIR}/${SSH_KEYFILE}.pub"

rm -rf $SSH_DIR

oc label -n open-cluster-management secret $AWS_SECRET_NAME \
  cluster.open-cluster-management.io/credentials="" \
  cluster.open-cluster-management.io/type="aws"
