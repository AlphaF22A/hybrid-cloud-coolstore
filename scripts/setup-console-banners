#!/bin/bash

TMP_KUBECONFIG=/tmp/kubeconfig

CLUSTERS="coolstore-a coolstore-b coolstore-c"

CONFIG=""

for cluster in $CLUSTERS; do
  secret="$(oc get -n openshift-gitops secret/${cluster}-cluster-secret -o jsonpath='{.data}')"
  token="$(echo -n $secret | jq -r '.config' | base64 -d | jq -r '.bearerToken')"
  apiserver="$(echo -n $secret | jq -r '.server' | base64 -d)"

  if [ -z "$token" ]; then
    echo "could not extract token for $cluster"
    exit 1
  fi

  if [ -z "$apiserver" ]; then
    echo "could not extract API server for $cluster"
    exit 1
  fi

  CONFIG="$CONFIG $cluster $token $apiserver"
done

function login {
  local token="$1"
  local api="$2"

  export KUBECONFIG=$TMP_KUBECONFIG
  rm -f $KUBECONFIG
  touch $KUBECONFIG

  echo "logging in to $api"
  oc login $api --token=$token --insecure-skip-tls-verify
}

function apply_banner {
  local bannertext="$1"

  cat <<EOF | oc apply -f -
apiVersion: console.openshift.io/v1
kind: ConsoleNotification
metadata:
  name: my-banner
spec:
  text: $bannertext
  location: BannerTop
EOF
}

function login_and_apply_banner {
  local clustername
  local token
  local apiserver

  while [ $# -gt 0 ]; do
    clustername="$1"
    token="$2"
    apiserver="$3"
    shift
    shift
    shift
    echo "$clustername $apiserver"
    login $token $apiserver
    apply_banner $clustername
  done
}

set -e

apply_banner "Hub Cluster"

login_and_apply_banner $CONFIG

rm -f $KUBECONFIG
