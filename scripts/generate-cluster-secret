#!/bin/bash

if [ "$#" -lt 1 ]; then
  >&2 echo "Usage: $0 CLUSTER_NAME" 
  exit 1
fi

NAME="$1"

#CONTEXT_NAME="$(oc config current-context | awk -F / '{ print $2 }')"

#if [ -z "$CONTEXT_NAME" ]; then
#  >&2 echo "could not get cluster context name from oc config current-context"
#  exit 1
#fi

#CA_DATA=$(oc config view --raw -o json | jq -r '.clusters[] | select(.name=="'"$CONTEXT_NAME"'") | .cluster."certificate-authority-data"')
#
#if [ -z "$CA_DATA" -o "$CA_DATA" = "null" ]; then
#  >&2 echo "could not get CA data from config"
#  exit 1
#fi

SERVER="$(oc whoami --show-server)"

if [ -z "$SERVER" ]; then
  >&2 echo "could not get current server"
  exit 1
fi

TOKEN="$(oc whoami -t)"

if [ -z "$TOKEN" ]; then
  >&2 echo "could not get current token"
  exit 1
fi

# copied from:
# https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters
cat <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: ${NAME}-secret
  labels:
    argocd.argoproj.io/secret-type: cluster
type: Opaque
stringData:
  name: $NAME
  server: $SERVER
  # note: insecure is set to true for demo purposes - if you set this to false, remember to include .stringData.config.tlsClientConfig.caData
  config: |
    {
      "bearerToken": "$TOKEN",
      "tlsClientConfig": {
        "insecure": true
      }
    }
EOF
